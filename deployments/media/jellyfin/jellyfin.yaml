---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jellyfin
  namespace: media
spec:
  selector:
    matchLabels:
      app: jellyfin
  template:
    metadata:
      labels:
        app: jellyfin
    spec:
      containers:
      - env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        image: docker.io/jellyfin/jellyfin
        imagePullPolicy: IfNotPresent
        name: jellyfin
        resources:
          requests:
            memory: "500Mi"
            cpu: "1000m"
          limits:
            memory: "500Mi"
            cpu: "1000m"
        ports:
        - containerPort: 8096
          protocol: TCP
        volumeMounts:
        - mountPath: /media
          name: media-videos
          readOnly: True
        - mountPath: /config
          subPath: "jellyfin"
          name: media-config
      restartPolicy: Always
      volumes:
      - name: media-videos
        persistentVolumeClaim:
          claimName: media-videos-pvc
      - name: media-config
        persistentVolumeClaim:
          claimName: media-config-pvc
      nodeName: k8s-master-01
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: jellyfin
  name: jellyfin
  namespace: media
spec:
  ports:
  - name: web
    port: 80
    protocol: TCP
    targetPort: 8096
  selector:
    app: jellyfin
  type: LoadBalancer