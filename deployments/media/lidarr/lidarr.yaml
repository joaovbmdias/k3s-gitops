---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: lidarr
  namespace: media
spec:
  selector:
    matchLabels:
      app: lidarr
  template:
    metadata:
      labels:
        app: lidarr
    spec:
      containers:
      - env:
        - name: PUID
          value: "1000"
        - name: PGID
          value: "1000"
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        image: docker.io/linuxserver/lidarr
        imagePullPolicy: IfNotPresent
        name: lidarr
        ports:
        - containerPort: 8686
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 256Mi
          requests:
            cpu: 100m
            memory: 128Mi
        volumeMounts:
          - name: media-config
            mountPath: "/config"
            subPath: "lidarr"
          - name: media-downloads
            mountPath: "/downloads/transmission"
            subPath: ""
          - name: media-music
            mountPath: "/music"
            subPath: ""
      restartPolicy: Always
      volumes:
      - name: media-music
        persistentVolumeClaim:
          claimName: media-music-pvc
      - name: media-downloads
        persistentVolumeClaim:
          claimName: media-downloads-pvc
      - name: media-config
        persistentVolumeClaim:
          claimName: media-config-pvc
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: lidarr
  name: lidarr
  namespace: media
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 8686
  selector:
    app: lidarr
  type: ClusterIP