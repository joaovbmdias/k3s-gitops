---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sonarr
  namespace: media
spec:
  selector:
    matchLabels:
      app: sonarr
  template:
    metadata:
      labels:
        app: sonarr
    spec:
      containers:
      - env:
        - name: PUID
          value: "0"
        - name: PGID
          value: "0"
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        image: docker.io/linuxserver/sonarr
        imagePullPolicy: IfNotPresent
        name: sonarr
        ports:
        - containerPort: 8989
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 300Mi
          requests:
            cpu: 50m
            memory: 190Mi
        volumeMounts:
          - name: media-config
            mountPath: "/config"
            subPath: "sonarr"
          - name: media-downloads
            mountPath: "/downloads"
          - name: media-videos
            mountPath: "/tv"
      restartPolicy: Always
      volumes:
      - name: media-downloads
        persistentVolumeClaim:
          claimName: media-downloads-pvc
      - name: media-videos
        persistentVolumeClaim:
          claimName: media-videos-pvc
      - name: media-config
        persistentVolumeClaim:
          claimName: media-config-pvc
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: sonarr
  name: sonarr
  namespace: media
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 8989
  selector:
    app: sonarr
  type: ClusterIP